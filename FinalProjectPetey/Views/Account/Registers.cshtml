@model FinalProjectPetey.Models.customer

@{
    ViewBag.Title = "Registers";
}

@Styles.Render("~/Content/css")
@Scripts.Render("~/bundles/modernizr")


<body style="background-color:#FFE57E;">
    <br /><br /><br /><br />
    @using (Html.BeginForm("Registers", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
            {
        @Html.AntiForgeryToken()
       
            <div class="container">
                <center> <h2>Register</h2> </center>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="row">
                    <div class="col">
                        @Html.LabelFor(model => model.Username, "ชื่อผู้ใช้งาน", htmlAttributes: new { @class = "control-label col-md-10" })
                        <div class="col">
                            @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col">
                        @Html.LabelFor(model => model.Password, "รหัสผ่าน", htmlAttributes: new { @class = "control-label col-md-10" })
                        <div class="col">
                            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", @type = "Password" } })
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col">
                        @Html.LabelFor(model => model.ConfirmPassword, "ยืนยันรหัสผ่าน", htmlAttributes: new { @class = "control-label col-md-10" })
                        <div class="col">
                            @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control", @type = "Password" } })
                            @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col">
                        @Html.LabelFor(model => model.E_mail, "อีเมล์", htmlAttributes: new { @class = "control-label col-md-10" })
                        <div class="col">
                            @Html.EditorFor(model => model.E_mail, new { htmlAttributes = new { @class = "form-control", @type = "email" } })
                            @Html.ValidationMessageFor(model => model.E_mail, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col">
                        @Html.LabelFor(model => model.Fullname, "ชื่อ", htmlAttributes: new { @class = "control-label col-md-10" })
                        <div class="col">
                            @Html.EditorFor(model => model.Fullname, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Fullname, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col">
                        @Html.LabelFor(model => model.Sex, "เพศ", htmlAttributes: new { @class = "control-label col-md-10" })
                        <div class="col">
                            ชาย
                            @Html.RadioButtonFor(model => model.Sex, "Male", new { htmlAttributes = new { @class = "form-control"  } })
                            หญิง
                            @Html.RadioButtonFor(model => model.Sex, "female", new { htmlAttributes = new { @class = "form-control"} })

                            @Html.ValidationMessageFor(model => model.Sex, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col">
                        @Html.LabelFor(model => model.Birthdate, "วัน/เดือน/ปีเกิด", htmlAttributes: new { @class = "control-label col-md-10" })
                        <div class="col">
                            @Html.EditorFor(model => model.Birthdate, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
                            @Html.ValidationMessageFor(model => model.Birthdate, "", new { @class = "text-danger" })
                        </div>
                    </div>


                    <div class="col">
                        @Html.LabelFor(model => model.Phone_No, "เบอร์โทรศัพท์", htmlAttributes: new { @class = "control-label col-md-10" })
                        <div class="col">
                            @Html.EditorFor(model => model.Phone_No, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Phone_No, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col">
                        @Html.LabelFor(model => model.Address, "ที่อยู่", htmlAttributes: new { @class = "control-label col-md-10" })
                        <div class="col">
                            @Html.TextAreaFor(model => model.Address, 5, 65, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    @*<div class="col">
                        @Html.LabelFor(model => model.Phone_No, "ลิงค์ที่อยู่", htmlAttributes: new { @class = "control-label col-md-10" })
                        <div class="col">
                            @Html.EditorFor(model => model.Phone_No, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Phone_No, "", new { @class = "text-danger" })

                        </div><br>
                        <div class="col-md-auto">
                            <a href="https://www.google.co.th/maps" class="btn btn-outline-danger" target="_blank">Go to google map</a>
                        </div>
                    </div>*@
                </div>
                <br />

                <div class="row justify-content-center">
                    <div class="col-md-auto">
                        <button type="submit" class="btn btn-outline-success">Create</button>
                    </div>

                    <div class="col-md-auto">
                        <button type="reset" class="btn btn-outline-danger">Cancle</button>
                    </div>
                </div>
            </div>
            }
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    @*<script>
        $('#fileUploadExcel').click(function (e) {
            if ($('#fileUpload').val() === "") {
                sweetAlert("File Shouldn't Be Empty!!", "Please select file", "error");
                //alert("File Shouldn't Be Empty!!");
                return false;
            }
            if ($('#fileUpload').val() !== "") {
                sweetAlert("Congratulations!!", "You Uploaded A Valid File", "success");
                return false;
            }
        });
    </script>*@ 
</body>

@*@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}*@

